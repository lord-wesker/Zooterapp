// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zooterapp.Web.Data;

namespace Zooterapp.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190809175831_ManyToManyPetAchievements")]
    partial class ManyToManyPetAchievements
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Achievement");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.Commitment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("PetId");

                    b.Property<int?>("PetOwnerId");

                    b.Property<decimal>("Price");

                    b.Property<string>("Remarks");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("PetOwnerId");

                    b.HasIndex("UserId");

                    b.ToTable("Commitments");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<bool>("IsAvailable");

                    b.Property<string>("Name");

                    b.Property<int?>("OwnerId");

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.PetAchievement", b =>
                {
                    b.Property<int>("PetId");

                    b.Property<int>("AchievementId");

                    b.Property<int>("Id");

                    b.HasKey("PetId", "AchievementId");

                    b.HasIndex("AchievementId");

                    b.ToTable("PetAchievement");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.PetImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("PetId");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("PetImages");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.PetOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CellPhone");

                    b.Property<string>("Document");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("PetOwners");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("race");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CellPhone");

                    b.Property<string>("Document");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.Commitment", b =>
                {
                    b.HasOne("Zooterapp.Web.Data.Entities.Pet", "Pet")
                        .WithMany("Commitments")
                        .HasForeignKey("PetId");

                    b.HasOne("Zooterapp.Web.Data.Entities.PetOwner", "PetOwner")
                        .WithMany("Commitments")
                        .HasForeignKey("PetOwnerId");

                    b.HasOne("Zooterapp.Web.Data.Entities.User", "User")
                        .WithMany("Commitments")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.Pet", b =>
                {
                    b.HasOne("Zooterapp.Web.Data.Entities.PetOwner", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId");

                    b.HasOne("Zooterapp.Web.Data.Entities.PetType", "Type")
                        .WithMany("Pets")
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.PetAchievement", b =>
                {
                    b.HasOne("Zooterapp.Web.Data.Entities.Achievement", "Achievement")
                        .WithMany("PetAchievements")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Zooterapp.Web.Data.Entities.Pet", "Pet")
                        .WithMany("PetAchievements")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Zooterapp.Web.Data.Entities.PetImage", b =>
                {
                    b.HasOne("Zooterapp.Web.Data.Entities.Pet", "Pet")
                        .WithMany("PetImages")
                        .HasForeignKey("PetId");
                });
#pragma warning restore 612, 618
        }
    }
}
